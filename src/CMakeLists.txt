set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Restrictions control (internal)
set(RESTRICTION_DEFINES "" CACHE INTERNAL "Restriction flag control (internal use only)")

if(ENABLE_ASSERTIONS)
  add_definitions(-UNDEBUG)
endif()

message("-- xvc target architecture: ${XVC_TARGET_ARCH}")
add_definitions("-DXVC_ARCH_${XVC_TARGET_ARCH}=1")
if(XVC_HAVE_NEON)
  message("-- xvc with NEON support")
  add_definitions("-DXVC_HAVE_NEON=1")
endif()

if(MSVC)
  set(cxx_base_flags /GS /W4 /WX /Za)
  set(cxx_exception_flags "-EHsc")
  set(cxx_strict_flags /we4388 /we4389 /wd4100 /wd4127)
  if(CODE_ANALYZE)
    set(cxx_base_flags ${cxx_base_flags} /analyze /wd6240 /wd6326)
  endif()
elseif(CMAKE_COMPILER_IS_GNUCXX)
  set(cxx_base_flags -Wall -Wshadow)
  set(cxx_exception_flags "-fexceptions")
  set(cxx_strict_flags -Werror -Wextra -Wno-unused-parameter -Wno-missing-field-initializers)
  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8)
    set(cxx_strict_flags ${cxx_strict_flags} -Wno-error=missing-braces)
  endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  set(cxx_base_flags -Wshadow)
  set(cxx_exception_flags "-fexceptions")
  set(cxx_strict_flags -Werror)
endif()
set(cxx_default ${cxx_base_flags} ${cxx_exception_flags})
set(cxx_strict ${cxx_strict_flags})
set(linker_flags "")

if(SANITIZE_BUILD)
  set(cxx_default ${cxx_default} -fsanitize=${SANITIZE_BUILD} -fno-omit-frame-pointer)
  set(linker_flags ${linker_flags} "-fsanitize=${SANITIZE_BUILD}")
endif()

# xvc_common_lib
file (GLOB SRC_COMMON_LIB xvc_common_lib/*.cc)
add_library (xvc_common_lib OBJECT ${SRC_COMMON_LIB})
target_compile_options(xvc_common_lib PRIVATE ${cxx_default} ${cxx_strict})
target_include_directories (xvc_common_lib PUBLIC .)

# xvc_enc_lib
file (GLOB SRC_ENC_LIB xvc_enc_lib/*.cc)
add_library (xvc_enc_lib ${SRC_ENC_LIB} $<TARGET_OBJECTS:xvc_common_lib>)
target_compile_options(xvc_enc_lib PRIVATE ${cxx_default} ${cxx_strict})
target_include_directories (xvc_enc_lib PUBLIC .)
target_link_libraries(xvc_enc_lib INTERFACE ${linker_flags})

# xvc_dec_lib
file (GLOB SRC_DEC_LIB xvc_dec_lib/*.cc)
add_library (xvc_dec_lib ${SRC_DEC_LIB} $<TARGET_OBJECTS:xvc_common_lib>)
target_compile_options(xvc_dec_lib PRIVATE ${cxx_default} ${cxx_strict})
target_include_directories (xvc_dec_lib PUBLIC .)
target_link_libraries(xvc_dec_lib INTERFACE ${linker_flags})

if(RESTRICTION_DEFINES)
  set_source_files_properties(xvc_common_lib/restrictions.cc PROPERTIES COMPILE_FLAGS ${RESTRICTION_DEFINES})
endif()

